# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  docker: circleci/docker@1.5.0

executors:
  docker-publisher:
    environment:
      IMAGE_TAG: suanu/linux-runner:latest
    docker: # Each job requires specifying an executor
      # (either docker, macos, or machine), see
      - image: 'docker:stable'

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  
  build:
    # Use docker-publisher from above as the Docker container to run this job in
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker

      - run: mkdir -p workspace

      - run:
          name: Build Docker image
          # Tag using the image tag above
          command: docker build --tag "${IMAGE_TAG}" .

      # Archive and persist the Docker image
      - run:
          name: Archive Docker image
          command: docker save --output image.tar "${IMAGE_TAG}"

      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  push-to-docker-hub:
    # Use docker-publisher from above as the Docker container to run this job in
    executor: docker-publisher

    steps:
      # Set up a separate Docker environment to run `docker` commands in
      - setup_remote_docker

      # Load and un-archive the Docker image
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load Docker image
          command: docker load --input /tmp/workspace/image.tar

      # Log in to Docker Hub and push the image
      - run:
          name: Publish Docker image
          command: |
            echo "${DOCKERHUB_PASS}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
            docker push "${IMAGE_TAG}"

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  Build-And-Push:
    jobs:
      - build:
          # Only build from the master branch
          filters:
            branches:
              only: master
      # Push the image second
      - push-to-docker-hub:
          context: app-deploy
          # Build needs to finish first
          requires:
            - build
          # Only push images from the master branch
          filters:
            branches:
              only: master